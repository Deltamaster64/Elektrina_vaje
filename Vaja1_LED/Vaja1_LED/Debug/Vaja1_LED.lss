
Vaja1_LED.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000468  00400000  00400000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000434  20000000  00400468  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000040  20000434  0040089c  00020434  2**2
                  ALLOC
  3 .stack        00003004  20000474  004008dc  00020434  2**0
                  ALLOC
  4 .ARM.attributes 0000002a  00000000  00000000  00020434  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  0002045e  2**0
                  CONTENTS, READONLY
  6 .debug_info   000014b4  00000000  00000000  000204b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000034d  00000000  00000000  0002196b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000098  00000000  00000000  00021cb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000080  00000000  00000000  00021d50  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000050  00000000  00000000  00021dd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  0000f64c  00000000  00000000  00021e20  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00001655  00000000  00000000  0003146c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0004863f  00000000  00000000  00032ac1  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00000270  00000000  00000000  0007b100  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	78 34 00 20 69 01 40 00 65 01 40 00 65 01 40 00     x4. i.@.e.@.e.@.
  400010:	65 01 40 00 65 01 40 00 65 01 40 00 00 00 00 00     e.@.e.@.e.@.....
	...
  40002c:	65 01 40 00 65 01 40 00 00 00 00 00 65 01 40 00     e.@.e.@.....e.@.
  40003c:	65 01 40 00 65 01 40 00 65 01 40 00 65 01 40 00     e.@.e.@.e.@.e.@.
  40004c:	65 01 40 00 65 01 40 00 65 01 40 00 65 01 40 00     e.@.e.@.e.@.e.@.
  40005c:	65 01 40 00 65 01 40 00 65 01 40 00 65 01 40 00     e.@.e.@.e.@.e.@.
  40006c:	65 01 40 00 65 01 40 00 65 01 40 00 65 01 40 00     e.@.e.@.e.@.e.@.
  40007c:	65 01 40 00 65 01 40 00 65 01 40 00 65 01 40 00     e.@.e.@.e.@.e.@.
  40008c:	65 01 40 00 65 01 40 00 65 01 40 00 65 01 40 00     e.@.e.@.e.@.e.@.
  40009c:	65 01 40 00 65 01 40 00 65 01 40 00 65 01 40 00     e.@.e.@.e.@.e.@.
  4000ac:	65 01 40 00 65 01 40 00 65 01 40 00 65 01 40 00     e.@.e.@.e.@.e.@.
  4000bc:	65 01 40 00 65 01 40 00 65 01 40 00 65 01 40 00     e.@.e.@.e.@.e.@.
  4000cc:	65 01 40 00 65 01 40 00 65 01 40 00 65 01 40 00     e.@.e.@.e.@.e.@.
  4000dc:	65 01 40 00 65 01 40 00 00 00 00 00 00 00 00 00     e.@.e.@.........
	...

004000f8 <__do_global_dtors_aux>:
  4000f8:	b510      	push	{r4, lr}
  4000fa:	4c05      	ldr	r4, [pc, #20]	; (400110 <__do_global_dtors_aux+0x18>)
  4000fc:	7823      	ldrb	r3, [r4, #0]
  4000fe:	b933      	cbnz	r3, 40010e <__do_global_dtors_aux+0x16>
  400100:	4b04      	ldr	r3, [pc, #16]	; (400114 <__do_global_dtors_aux+0x1c>)
  400102:	b113      	cbz	r3, 40010a <__do_global_dtors_aux+0x12>
  400104:	4804      	ldr	r0, [pc, #16]	; (400118 <__do_global_dtors_aux+0x20>)
  400106:	f3af 8000 	nop.w
  40010a:	2301      	movs	r3, #1
  40010c:	7023      	strb	r3, [r4, #0]
  40010e:	bd10      	pop	{r4, pc}
  400110:	20000434 	.word	0x20000434
  400114:	00000000 	.word	0x00000000
  400118:	00400468 	.word	0x00400468

0040011c <frame_dummy>:
  40011c:	4b0c      	ldr	r3, [pc, #48]	; (400150 <frame_dummy+0x34>)
  40011e:	b143      	cbz	r3, 400132 <frame_dummy+0x16>
  400120:	480c      	ldr	r0, [pc, #48]	; (400154 <frame_dummy+0x38>)
  400122:	490d      	ldr	r1, [pc, #52]	; (400158 <frame_dummy+0x3c>)
  400124:	b510      	push	{r4, lr}
  400126:	f3af 8000 	nop.w
  40012a:	480c      	ldr	r0, [pc, #48]	; (40015c <frame_dummy+0x40>)
  40012c:	6803      	ldr	r3, [r0, #0]
  40012e:	b923      	cbnz	r3, 40013a <frame_dummy+0x1e>
  400130:	bd10      	pop	{r4, pc}
  400132:	480a      	ldr	r0, [pc, #40]	; (40015c <frame_dummy+0x40>)
  400134:	6803      	ldr	r3, [r0, #0]
  400136:	b933      	cbnz	r3, 400146 <frame_dummy+0x2a>
  400138:	4770      	bx	lr
  40013a:	4b09      	ldr	r3, [pc, #36]	; (400160 <frame_dummy+0x44>)
  40013c:	2b00      	cmp	r3, #0
  40013e:	d0f7      	beq.n	400130 <frame_dummy+0x14>
  400140:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400144:	4718      	bx	r3
  400146:	4b06      	ldr	r3, [pc, #24]	; (400160 <frame_dummy+0x44>)
  400148:	2b00      	cmp	r3, #0
  40014a:	d0f5      	beq.n	400138 <frame_dummy+0x1c>
  40014c:	4718      	bx	r3
  40014e:	bf00      	nop
  400150:	00000000 	.word	0x00000000
  400154:	00400468 	.word	0x00400468
  400158:	20000438 	.word	0x20000438
  40015c:	00400468 	.word	0x00400468
  400160:	00000000 	.word	0x00000000

00400164 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  400164:	e7fe      	b.n	400164 <Dummy_Handler>
	...

00400168 <Reset_Handler>:
{
  400168:	b508      	push	{r3, lr}
        if (pSrc != pDest) {
  40016a:	4b10      	ldr	r3, [pc, #64]	; (4001ac <Reset_Handler+0x44>)
  40016c:	4a10      	ldr	r2, [pc, #64]	; (4001b0 <Reset_Handler+0x48>)
  40016e:	429a      	cmp	r2, r3
  400170:	d009      	beq.n	400186 <Reset_Handler+0x1e>
  400172:	4b0e      	ldr	r3, [pc, #56]	; (4001ac <Reset_Handler+0x44>)
  400174:	4a0e      	ldr	r2, [pc, #56]	; (4001b0 <Reset_Handler+0x48>)
  400176:	e003      	b.n	400180 <Reset_Handler+0x18>
                        *pDest++ = *pSrc++;
  400178:	6811      	ldr	r1, [r2, #0]
  40017a:	6019      	str	r1, [r3, #0]
  40017c:	3304      	adds	r3, #4
  40017e:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
  400180:	490c      	ldr	r1, [pc, #48]	; (4001b4 <Reset_Handler+0x4c>)
  400182:	428b      	cmp	r3, r1
  400184:	d3f8      	bcc.n	400178 <Reset_Handler+0x10>
                        *pDest++ = *pSrc++;
  400186:	4b0c      	ldr	r3, [pc, #48]	; (4001b8 <Reset_Handler+0x50>)
  400188:	e002      	b.n	400190 <Reset_Handler+0x28>
                *pDest++ = 0;
  40018a:	2200      	movs	r2, #0
  40018c:	601a      	str	r2, [r3, #0]
  40018e:	3304      	adds	r3, #4
        for (pDest = &_szero; pDest < &_ezero;) {
  400190:	4a0a      	ldr	r2, [pc, #40]	; (4001bc <Reset_Handler+0x54>)
  400192:	4293      	cmp	r3, r2
  400194:	d3f9      	bcc.n	40018a <Reset_Handler+0x22>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  400196:	4a0a      	ldr	r2, [pc, #40]	; (4001c0 <Reset_Handler+0x58>)
  400198:	4b0a      	ldr	r3, [pc, #40]	; (4001c4 <Reset_Handler+0x5c>)
  40019a:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  40019e:	6093      	str	r3, [r2, #8]
        __libc_init_array();
  4001a0:	4b09      	ldr	r3, [pc, #36]	; (4001c8 <Reset_Handler+0x60>)
  4001a2:	4798      	blx	r3
        main();
  4001a4:	4b09      	ldr	r3, [pc, #36]	; (4001cc <Reset_Handler+0x64>)
  4001a6:	4798      	blx	r3
  4001a8:	e7fe      	b.n	4001a8 <Reset_Handler+0x40>
  4001aa:	bf00      	nop
  4001ac:	20000000 	.word	0x20000000
  4001b0:	00400468 	.word	0x00400468
  4001b4:	20000434 	.word	0x20000434
  4001b8:	20000434 	.word	0x20000434
  4001bc:	20000474 	.word	0x20000474
  4001c0:	e000ed00 	.word	0xe000ed00
  4001c4:	00400000 	.word	0x00400000
  4001c8:	004002d1 	.word	0x004002d1
  4001cc:	00400299 	.word	0x00400299

004001d0 <SystemInit>:
 * Initialize the System and update the SystemFrequency variable.
 */
void SystemInit( void )
{
	/* Set FWS according to SYS_BOARD_MCKR configuration */
	EFC->EEFC_FMR = EEFC_FMR_FWS(5);
  4001d0:	f44f 62a0 	mov.w	r2, #1280	; 0x500
  4001d4:	4b1f      	ldr	r3, [pc, #124]	; (400254 <SystemInit+0x84>)
  4001d6:	601a      	str	r2, [r3, #0]


	/* Initialize main oscillator */
	if ( !(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) )
  4001d8:	f5a3 63c0 	sub.w	r3, r3, #1536	; 0x600
  4001dc:	6a1b      	ldr	r3, [r3, #32]
  4001de:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4001e2:	d107      	bne.n	4001f4 <SystemInit+0x24>
  {
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN;
  4001e4:	4a1c      	ldr	r2, [pc, #112]	; (400258 <SystemInit+0x88>)
  4001e6:	4b1d      	ldr	r3, [pc, #116]	; (40025c <SystemInit+0x8c>)
  4001e8:	621a      	str	r2, [r3, #32]

		while ( !(PMC->PMC_SR & PMC_SR_MOSCXTS) )
  4001ea:	4b1c      	ldr	r3, [pc, #112]	; (40025c <SystemInit+0x8c>)
  4001ec:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  4001ee:	f013 0f01 	tst.w	r3, #1
  4001f2:	d0fa      	beq.n	4001ea <SystemInit+0x1a>
    {
		}
	}

	/* Switch to 3-20MHz Xtal oscillator */
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN | CKGR_MOR_MOSCSEL;
  4001f4:	4a1a      	ldr	r2, [pc, #104]	; (400260 <SystemInit+0x90>)
  4001f6:	4b19      	ldr	r3, [pc, #100]	; (40025c <SystemInit+0x8c>)
  4001f8:	621a      	str	r2, [r3, #32]

	while ( !(PMC->PMC_SR & PMC_SR_MOSCSELS) )
  4001fa:	4b18      	ldr	r3, [pc, #96]	; (40025c <SystemInit+0x8c>)
  4001fc:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  4001fe:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  400202:	d0fa      	beq.n	4001fa <SystemInit+0x2a>
  {
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
  400204:	4a15      	ldr	r2, [pc, #84]	; (40025c <SystemInit+0x8c>)
  400206:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400208:	f023 0303 	bic.w	r3, r3, #3
  40020c:	f043 0301 	orr.w	r3, r3, #1
  400210:	6313      	str	r3, [r2, #48]	; 0x30

	while ( !(PMC->PMC_SR & PMC_SR_MCKRDY) )
  400212:	4b12      	ldr	r3, [pc, #72]	; (40025c <SystemInit+0x8c>)
  400214:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  400216:	f013 0f08 	tst.w	r3, #8
  40021a:	d0fa      	beq.n	400212 <SystemInit+0x42>
  {
  }

	/* Initialize PLLA */
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
  40021c:	4a11      	ldr	r2, [pc, #68]	; (400264 <SystemInit+0x94>)
  40021e:	4b0f      	ldr	r3, [pc, #60]	; (40025c <SystemInit+0x8c>)
  400220:	629a      	str	r2, [r3, #40]	; 0x28
	while ( !(PMC->PMC_SR & PMC_SR_LOCKA) )
  400222:	4b0e      	ldr	r3, [pc, #56]	; (40025c <SystemInit+0x8c>)
  400224:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  400226:	f013 0f02 	tst.w	r3, #2
  40022a:	d0fa      	beq.n	400222 <SystemInit+0x52>
  {
	}

	/* Switch to main clock */
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
  40022c:	2211      	movs	r2, #17
  40022e:	4b0b      	ldr	r3, [pc, #44]	; (40025c <SystemInit+0x8c>)
  400230:	631a      	str	r2, [r3, #48]	; 0x30
	while ( !(PMC->PMC_SR & PMC_SR_MCKRDY) )
  400232:	4b0a      	ldr	r3, [pc, #40]	; (40025c <SystemInit+0x8c>)
  400234:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  400236:	f013 0f08 	tst.w	r3, #8
  40023a:	d0fa      	beq.n	400232 <SystemInit+0x62>
  {
  }

	/* Switch to PLLA */
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
  40023c:	2212      	movs	r2, #18
  40023e:	4b07      	ldr	r3, [pc, #28]	; (40025c <SystemInit+0x8c>)
  400240:	631a      	str	r2, [r3, #48]	; 0x30
	while ( !(PMC->PMC_SR & PMC_SR_MCKRDY) )
  400242:	4b06      	ldr	r3, [pc, #24]	; (40025c <SystemInit+0x8c>)
  400244:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  400246:	f013 0f08 	tst.w	r3, #8
  40024a:	d0fa      	beq.n	400242 <SystemInit+0x72>
  {
  }

	SystemCoreClock = CHIP_FREQ_CPU_MAX;
  40024c:	4a06      	ldr	r2, [pc, #24]	; (400268 <SystemInit+0x98>)
  40024e:	4b07      	ldr	r3, [pc, #28]	; (40026c <SystemInit+0x9c>)
  400250:	601a      	str	r2, [r3, #0]
  400252:	4770      	bx	lr
  400254:	400e0a00 	.word	0x400e0a00
  400258:	00370809 	.word	0x00370809
  40025c:	400e0400 	.word	0x400e0400
  400260:	01370809 	.word	0x01370809
  400264:	20133f01 	.word	0x20133f01
  400268:	07270e00 	.word	0x07270e00
  40026c:	20000000 	.word	0x20000000

00400270 <Define_GPIO>:
#define SWITCH_PIN  2       // SW0 PA2

void Define_GPIO(void) {

	// Enable peripheral clocks PIOA,PIOD
	PMC->PMC_PCER0 = (1 << ID_PIOA) | (1 << ID_PIOD);
  400270:	f44f 5290 	mov.w	r2, #4608	; 0x1200
  400274:	4b07      	ldr	r3, [pc, #28]	; (400294 <Define_GPIO+0x24>)
  400276:	611a      	str	r2, [r3, #16]

	// Configure LED
	PIOD->PIO_PER = (1 << LED_PIN);  // Enable PIO control
  400278:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  40027c:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  400280:	601a      	str	r2, [r3, #0]
	PIOD->PIO_OER = (1 << LED_PIN);  // Configure as output
  400282:	611a      	str	r2, [r3, #16]
	PIOD->PIO_CODR = (1 << LED_PIN); // Initialize LED output
  400284:	635a      	str	r2, [r3, #52]	; 0x34

	// Configure switch
	PIOA->PIO_PER = (1 << SWITCH_PIN); // Enable PIO control
  400286:	f5a3 63c0 	sub.w	r3, r3, #1536	; 0x600
  40028a:	2204      	movs	r2, #4
  40028c:	601a      	str	r2, [r3, #0]
	PIOA->PIO_ODR = (1 << SWITCH_PIN); // Configure as input
  40028e:	615a      	str	r2, [r3, #20]
	PIOA->PIO_PUER = (1 << SWITCH_PIN); // Enable pull-up resistor
  400290:	665a      	str	r2, [r3, #100]	; 0x64
  400292:	4770      	bx	lr
  400294:	400e0400 	.word	0x400e0400

00400298 <main>:
}

int main(void) {
  400298:	b508      	push	{r3, lr}

	SystemInit();
  40029a:	4b09      	ldr	r3, [pc, #36]	; (4002c0 <main+0x28>)
  40029c:	4798      	blx	r3
	Define_GPIO();
  40029e:	4b09      	ldr	r3, [pc, #36]	; (4002c4 <main+0x2c>)
  4002a0:	4798      	blx	r3
  4002a2:	e003      	b.n	4002ac <main+0x14>
		
		if (PIOA->PIO_PDSR & (1 << SWITCH_PIN)) {
			PIOD->PIO_SODR = (1 << LED_PIN);
			}
		else {
			PIOD->PIO_CODR = (1 << LED_PIN);
  4002a4:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  4002a8:	4b07      	ldr	r3, [pc, #28]	; (4002c8 <main+0x30>)
  4002aa:	635a      	str	r2, [r3, #52]	; 0x34
		if (PIOA->PIO_PDSR & (1 << SWITCH_PIN)) {
  4002ac:	4b07      	ldr	r3, [pc, #28]	; (4002cc <main+0x34>)
  4002ae:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
  4002b0:	f013 0f04 	tst.w	r3, #4
  4002b4:	d0f6      	beq.n	4002a4 <main+0xc>
			PIOD->PIO_SODR = (1 << LED_PIN);
  4002b6:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  4002ba:	4b03      	ldr	r3, [pc, #12]	; (4002c8 <main+0x30>)
  4002bc:	631a      	str	r2, [r3, #48]	; 0x30
  4002be:	e7f5      	b.n	4002ac <main+0x14>
  4002c0:	004001d1 	.word	0x004001d1
  4002c4:	00400271 	.word	0x00400271
  4002c8:	400e1400 	.word	0x400e1400
  4002cc:	400e0e00 	.word	0x400e0e00

004002d0 <__libc_init_array>:
  4002d0:	b570      	push	{r4, r5, r6, lr}
  4002d2:	4e0f      	ldr	r6, [pc, #60]	; (400310 <__libc_init_array+0x40>)
  4002d4:	4d0f      	ldr	r5, [pc, #60]	; (400314 <__libc_init_array+0x44>)
  4002d6:	1b76      	subs	r6, r6, r5
  4002d8:	10b6      	asrs	r6, r6, #2
  4002da:	bf18      	it	ne
  4002dc:	2400      	movne	r4, #0
  4002de:	d005      	beq.n	4002ec <__libc_init_array+0x1c>
  4002e0:	3401      	adds	r4, #1
  4002e2:	f855 3b04 	ldr.w	r3, [r5], #4
  4002e6:	4798      	blx	r3
  4002e8:	42a6      	cmp	r6, r4
  4002ea:	d1f9      	bne.n	4002e0 <__libc_init_array+0x10>
  4002ec:	4e0a      	ldr	r6, [pc, #40]	; (400318 <__libc_init_array+0x48>)
  4002ee:	4d0b      	ldr	r5, [pc, #44]	; (40031c <__libc_init_array+0x4c>)
  4002f0:	1b76      	subs	r6, r6, r5
  4002f2:	f000 f8a7 	bl	400444 <_init>
  4002f6:	10b6      	asrs	r6, r6, #2
  4002f8:	bf18      	it	ne
  4002fa:	2400      	movne	r4, #0
  4002fc:	d006      	beq.n	40030c <__libc_init_array+0x3c>
  4002fe:	3401      	adds	r4, #1
  400300:	f855 3b04 	ldr.w	r3, [r5], #4
  400304:	4798      	blx	r3
  400306:	42a6      	cmp	r6, r4
  400308:	d1f9      	bne.n	4002fe <__libc_init_array+0x2e>
  40030a:	bd70      	pop	{r4, r5, r6, pc}
  40030c:	bd70      	pop	{r4, r5, r6, pc}
  40030e:	bf00      	nop
  400310:	00400450 	.word	0x00400450
  400314:	00400450 	.word	0x00400450
  400318:	00400458 	.word	0x00400458
  40031c:	00400450 	.word	0x00400450

00400320 <register_fini>:
  400320:	4b02      	ldr	r3, [pc, #8]	; (40032c <register_fini+0xc>)
  400322:	b113      	cbz	r3, 40032a <register_fini+0xa>
  400324:	4802      	ldr	r0, [pc, #8]	; (400330 <register_fini+0x10>)
  400326:	f000 b805 	b.w	400334 <atexit>
  40032a:	4770      	bx	lr
  40032c:	00000000 	.word	0x00000000
  400330:	00400341 	.word	0x00400341

00400334 <atexit>:
  400334:	2300      	movs	r3, #0
  400336:	4601      	mov	r1, r0
  400338:	461a      	mov	r2, r3
  40033a:	4618      	mov	r0, r3
  40033c:	f000 b81e 	b.w	40037c <__register_exitproc>

00400340 <__libc_fini_array>:
  400340:	b538      	push	{r3, r4, r5, lr}
  400342:	4c0a      	ldr	r4, [pc, #40]	; (40036c <__libc_fini_array+0x2c>)
  400344:	4d0a      	ldr	r5, [pc, #40]	; (400370 <__libc_fini_array+0x30>)
  400346:	1b64      	subs	r4, r4, r5
  400348:	10a4      	asrs	r4, r4, #2
  40034a:	d00a      	beq.n	400362 <__libc_fini_array+0x22>
  40034c:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  400350:	3b01      	subs	r3, #1
  400352:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  400356:	3c01      	subs	r4, #1
  400358:	f855 3904 	ldr.w	r3, [r5], #-4
  40035c:	4798      	blx	r3
  40035e:	2c00      	cmp	r4, #0
  400360:	d1f9      	bne.n	400356 <__libc_fini_array+0x16>
  400362:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  400366:	f000 b877 	b.w	400458 <_fini>
  40036a:	bf00      	nop
  40036c:	00400468 	.word	0x00400468
  400370:	00400464 	.word	0x00400464

00400374 <__retarget_lock_acquire_recursive>:
  400374:	4770      	bx	lr
  400376:	bf00      	nop

00400378 <__retarget_lock_release_recursive>:
  400378:	4770      	bx	lr
  40037a:	bf00      	nop

0040037c <__register_exitproc>:
  40037c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400380:	4d2c      	ldr	r5, [pc, #176]	; (400434 <__register_exitproc+0xb8>)
  400382:	4606      	mov	r6, r0
  400384:	6828      	ldr	r0, [r5, #0]
  400386:	4698      	mov	r8, r3
  400388:	460f      	mov	r7, r1
  40038a:	4691      	mov	r9, r2
  40038c:	f7ff fff2 	bl	400374 <__retarget_lock_acquire_recursive>
  400390:	4b29      	ldr	r3, [pc, #164]	; (400438 <__register_exitproc+0xbc>)
  400392:	681c      	ldr	r4, [r3, #0]
  400394:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  400398:	2b00      	cmp	r3, #0
  40039a:	d03e      	beq.n	40041a <__register_exitproc+0x9e>
  40039c:	685a      	ldr	r2, [r3, #4]
  40039e:	2a1f      	cmp	r2, #31
  4003a0:	dc1c      	bgt.n	4003dc <__register_exitproc+0x60>
  4003a2:	f102 0e01 	add.w	lr, r2, #1
  4003a6:	b176      	cbz	r6, 4003c6 <__register_exitproc+0x4a>
  4003a8:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  4003ac:	2401      	movs	r4, #1
  4003ae:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  4003b2:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  4003b6:	4094      	lsls	r4, r2
  4003b8:	4320      	orrs	r0, r4
  4003ba:	2e02      	cmp	r6, #2
  4003bc:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  4003c0:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  4003c4:	d023      	beq.n	40040e <__register_exitproc+0x92>
  4003c6:	3202      	adds	r2, #2
  4003c8:	f8c3 e004 	str.w	lr, [r3, #4]
  4003cc:	6828      	ldr	r0, [r5, #0]
  4003ce:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  4003d2:	f7ff ffd1 	bl	400378 <__retarget_lock_release_recursive>
  4003d6:	2000      	movs	r0, #0
  4003d8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4003dc:	4b17      	ldr	r3, [pc, #92]	; (40043c <__register_exitproc+0xc0>)
  4003de:	b30b      	cbz	r3, 400424 <__register_exitproc+0xa8>
  4003e0:	f44f 70c8 	mov.w	r0, #400	; 0x190
  4003e4:	f3af 8000 	nop.w
  4003e8:	4603      	mov	r3, r0
  4003ea:	b1d8      	cbz	r0, 400424 <__register_exitproc+0xa8>
  4003ec:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  4003f0:	6002      	str	r2, [r0, #0]
  4003f2:	2100      	movs	r1, #0
  4003f4:	6041      	str	r1, [r0, #4]
  4003f6:	460a      	mov	r2, r1
  4003f8:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  4003fc:	f04f 0e01 	mov.w	lr, #1
  400400:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  400404:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  400408:	2e00      	cmp	r6, #0
  40040a:	d0dc      	beq.n	4003c6 <__register_exitproc+0x4a>
  40040c:	e7cc      	b.n	4003a8 <__register_exitproc+0x2c>
  40040e:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  400412:	430c      	orrs	r4, r1
  400414:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  400418:	e7d5      	b.n	4003c6 <__register_exitproc+0x4a>
  40041a:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  40041e:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  400422:	e7bb      	b.n	40039c <__register_exitproc+0x20>
  400424:	6828      	ldr	r0, [r5, #0]
  400426:	f7ff ffa7 	bl	400378 <__retarget_lock_release_recursive>
  40042a:	f04f 30ff 	mov.w	r0, #4294967295
  40042e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400432:	bf00      	nop
  400434:	20000430 	.word	0x20000430
  400438:	00400440 	.word	0x00400440
  40043c:	00000000 	.word	0x00000000

00400440 <_global_impure_ptr>:
  400440:	20000008                                ... 

00400444 <_init>:
  400444:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  400446:	bf00      	nop
  400448:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40044a:	bc08      	pop	{r3}
  40044c:	469e      	mov	lr, r3
  40044e:	4770      	bx	lr

00400450 <__init_array_start>:
  400450:	00400321 	.word	0x00400321

00400454 <__frame_dummy_init_array_entry>:
  400454:	0040011d                                ..@.

00400458 <_fini>:
  400458:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40045a:	bf00      	nop
  40045c:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40045e:	bc08      	pop	{r3}
  400460:	469e      	mov	lr, r3
  400462:	4770      	bx	lr

00400464 <__fini_array_start>:
  400464:	004000f9 	.word	0x004000f9
